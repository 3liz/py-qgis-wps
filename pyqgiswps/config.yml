# Copyright (c) 2020 3liz
---
config_options:
    #=========
    # Server
    #=========
    - name: SERVER_HTTP_PORT
      label: Port
      description: Port to listen to
      default: '8080'
      type: int
      key: port
      section: server
      tags: [ http ]

    - name: SERVER_INTERFACES
      label: Interfaces
      description: Interfaces to listen to
      default: '0.0.0.0'
      section: server
      key: interfaces
      tags: [ http ]

    - name: SERVER_ENABLE_FILTERS
      label: Enable filters
      description: Enable filters as python extension
      default: 'yes'
      type: boolean
      section: server
      key: enable_filters
      tags: [ filters ]

    - name: SERVER_HTTP_PROXY
      label: http proxy
      description: |
          Indicates that the server is behind a reverse proxy.
          Set this to 'yes' if you are planning to use Forwarded Headers
          or set a static proxy url with `QGIS_SERVER_<SERVICE>_URL`
      default: 'no'
      section: server
      key: http_proxy
      type: boolean
      tags: [ http, proxy ]

    - name: SERVER_PROXY_URL
      label: Proxy URL
      description: |
          The url that must be seen by the client when the server is behind a proxy.
          Note that this option will be overridden by `QGIS_SERVER_<SERVICE>_URL` or  
          by `X-Qgis-<service>-Url` headers.
      default: ''
      section: server
      key: proxy_url
      tags: [ http, proxy ]

    - name: SERVER_OUTPUTFILE_AS_REFERENCE
      label: Output file as reference
      description: |
           Select if output files are returned by reference for deferred download or in response body as 
           complex output.
      default:  'no'
      type: boolean
      section: server
      key: outputfile_as_reference
      tags: [ http, wps ]

    - name: SERVER_MAXINPUTSIZE
      label: Max input size
      description: Max input file fetched as remote reference
      default:  '100m'
      type: size
      section: server
      key: maxinputsize
      tags: [ http, wps ]

    - name: SERVER_MAXBUFFERSIZE
      label: Max buffer size
      description: Max request buffer size.
      default:  '1m'
      type: size
      section: server
      key: maxbuffersize
      tags: [ http ]

    - name: SERVER_WORKDIR
      label: Working directory
      description: |
         Parent working directory where processes are executed. Each processes will create
         a working directory for storing results files and logs. 
         The default value use the `gettempdir()` function.
      default:  System defaults
      type: path
      section: server
      key: workdir
      tags: [ wps, processes ]

    - name: SERVER_PARALLELPROCESSES
      label: Parallel processes
      description: |
         The number of parallel processes running `execute` requests. Extra processes will be queued.
      default:  1
      type: int
      section: server
      key: parallelprocesses
      tags: [ wps, processes ]

    - name: SERVER_PROCESSLIFECYCLE
      label: Processes lifecycles
      description: |
         Maximal number of executions that can run in the same worker before being recreating
         the worker.
      default:  1
      type: int
      section: server
      key: processlifecycle
      tags: [ wps, processes ]

    - name: SERVER_MAXQUEUESIZE
      label: Max queue size
      description: |
         Maximal number of waiting tasks - extra tasks will return a 509 in synchronous execution.
      default:  100
      type: int
      section: server
      key: maxqueuesize
      tags: [ wps, processes ]

    - name: SERVER_RESPONSE_TIMEOUT
      label: Response timeout
      description: |
         Timeout for tasks execution in seconds. Task running longer that this time will be aborted and
         a timeout error is returned.
      default:  1800
      type: int
      section: server
      key: response_timeout
      tags: [ wps, processes ]

    - name: SERVER_RESPONSE_EXPIRATION
      label: Response expiration
      description: |
         Response expiration in seconds. After that delay from the task's end, data (working directory and status)
         for that task will be deleted.
      default:  86400
      type: int
      section: server
      key: response_expiration
      tags: [ wps, processes ]

    - name: SERVER_WMS_SERVICE_URL
      label: WWS service url
      description: |
         The url for the service used to retrieve results as WMS/WFS references.
         Usually this will correspond to a QGIS server serving OWS services from results projects.
      default: 'Request host url'
      section: server
      key: wms_service_url
      tags: [ http, wps, processes ]

    - name: SERVER_RESULTS_MAP_URI
      label: Response MAP uri
      description: |
         Base uri used for the MAP argument in WMS/WFS response references.
         Define a base URI to use for 'MAP' arguments in WMS/WFS responses, this uri may
         corresponds to an 'alias in py-qgis-server <https://py-qgis-server.readthedocs.io/en/latest/schemes.html#scheme-aliases>' _.
      default: 'wps_result_map_uri'
      section: server
      key: wms_service_url
      tags: [ http, wps, processes ]

    - name: SERVER_CROSS_ORIGIN
      label: Allows cross origin CORS
      description: |
          Allows any origin for CORS. If set to 'no', allow only CORS for the 'Origin'
          header.
      default: ''
      type: boolean
      section: server
      key: cross_origin
      tags: [ http, security ]

    - name: SERVER_RESTARTMON
      label: Restart watch file
      description: |
          The file to watch for restarting workers. When the modified date of the file is changed, 
          the processing providers are reloaded.
          The restart is graceful, jobs terminate normally. During the restart process,
          the providers are reloaded, this allow for updating providers, models and scripts without
          interrupting the service.
      default: ''
      section: server
      key: restartmon
      type: path
      tags: [ wps, processes ]

    - name: SERVER_SSL
      label: Enable SSL
      description: Enable SSL endpoint
      default: 'no'
      type: boolean
      tags: [ http, ssl ]
      section: server
      key: ssl
      version_added: "1.6.4"

    - name: SERVER_SSL_CERT
      label: SSL Certificat
      description: Path to the SSL certificat file
      default: ''
      tags: [ http, ssl, security ]
      section: server
      key: ssl_cert
      type: path
      version_added: "1.6.4"

    - name: SERVER_SSL_KEY
      label: SSL Certificat
      description: Path to the SSL key file
      default: ''
      tags: [ http, ssl, security ]
      section: server
      key: ssl_key
      type: path
      version_added: "1.6.4"

    - name: SERVER_ENABLE_JOB_REALM
      label: Enable job realm access control
      description: |
        Enable job access control by associating a realm token
        to each job. Realm token are set by setting the 'X-Job-Realm'
        header to the token.
      tags: [ http, security ]
      section: server
      key: enable_job_realm
      type: boolean
      default: 'no'
      version_added: "1.8"

    - name: SERVER_ADMIN_REALM
      label: Administrator realm token
      description: |
          Administrator realm token.
          It allows bearer to bypass any other token
      default: ''
      tags: [ http, security ]
      section: server
      key: ssl_key
      type: path
      version_added: "1.8"

    #==========
    # Logging
    #==========
    - name: LOGGING_LEVEL
      label: Logging level
      description: Set the logging level
      type: [DEBUG,INFO,WARNING,ERROR,CRITICAL]
      default: DEBUG
      section: logging
      key: level
      tags: [ logging ]

    #==========
    # Log storage
    #==========
    - name: REDIS_HOST
      label: Redis host
      description: Redis storage backend host
      default: localhost
      section: 'logstorage:redis'
      key: host
      tags: [ storage, redis ]

    - name: REDIS_PORT
      label: Redis port
      description: Redis storage backend port
      default: 6379
      section: 'logstorage:redis'
      key: port
      tags: [ storage, redis ]

    - name: REDIS_DBNUM
      label: Redis database
      description: Redis storage backend database index
      default: 0
      section: 'logstorage:redis'
      key: dbnum
      tags: [ storage, redis ]

    - name: REDIS_PREFIX
      label: Redis prefix
      description: Redis storage backend key prefix.
      default: 'pyqgiswps'
      section: 'logstorage:redis'
      key: prefix
      tags: [ storage, redis ]

    #===============
    # Project cache
    #===============
    - name: CACHE_SIZE
      label: Cache size
      description: |
         The maximal number of QGIS projects held in cache. The cache strategy is LRU.
      default: '10'
      type: int
      section: projects.cache
      key: size
      tags: [ qgis, cache ]

    - name: CACHE_ROOTDIR
      label: Projects directory
      description: |
          The directory location for QGIS project files.
      tags: [ qgis, cache ]
      type: path
      section: projects.cache
      key: rootdir

    - name: CACHE_STRICT_CHECK
      label: Enable strict checking
      description: |
          Activate strict checking of project layers. When enabled, QGIS projects
          with invalid layers will be dismissed and an 'Unprocessable Entity' (422) HTTP error
          will be issued.
      default: 'yes'
      type: boolean
      section: projects.cache
      key: strict_check
      tags: [ qgis, cache ]


    #===============
    # Processing
    #===============
    - name: PROCESSING_PROVIDERS_MODULE_PATH
      label: Processing providers path
      description: Path to QGIS processing providers modules
      default: ''
      type: path
      section: processing
      key: providers_module_path
      tags: [ qgis, processing ]

    - name: PROCESSING_EXPOSED_PROVIDERS
      label: Internal qgis providers exposed
      description: |
          Comma separated list of exposed QGIS processing internal providers.
          We do not recommend exposing all providers like `qgis` or `native`, it's better to create your own script or
          model.
      default: 'script,model'
      type: list
      section: processing
      key: exposed_providers
      tags: [ qgis, processing ]

    - name: PROCESSING_ACCESSPOLICY
      label: Access policy
      description: Path to the access policy configuration file
      default: 'PROCESSING_PROVIDERS_MODULE_PATH/accesspolicy.yml'
      type: path
      section: processing
      key: accesspolicy
      tags: [ qgis, processing ]

    - name: PROCESSING_VECTOR_FILEEXT
      label: Default vector file extension
      description: |
          Define the default vector file extensions for vector destination
          parameters. If not specified, then the QGIS default value is used.
      type: string
      section: processing
      key: 'vector.fileext'
      tags: [ qgis, processing, vector ]

    - name: PROCESSING_RASTER_FILEEXT
      label: Default raster file extension
      description: |
          Define the default raster file extensions for raster destination
          parameters. If not specified, then the QGIS default value is used.
      type: string
      section: processing
      key: 'raster.fileext'
      tags: [ qgis, processing, raster ]

    - name:  PROCESSING_RAW_DESTINATION_INPUT_SINK
      label: Use destination input as sink
      description: |
        Allow input value as sink for destination layers. 
        This allow value passed as input value to be interpreted as
        path or uri sink definition. This enable passing any string
        that QGIS may use a input source but without open options except for the
        'layername=<name>' option.
        Running concurrent jobs with this option may result in unpredictable
        behavior.
        For that reason it is considered as an UNSAFE OPTION and you should never enable this option 
        if you are exposing the service publicly.

        File path prefixed with '/' will correspond to path located in the root directory specified by
        the `PROCESSING_DESTINATION_ROOT_PATH`_ option. Otherwise, they will be stored in the job folder.
      type: boolean
      default: no
      section: processing
      key: 'unsafe.raw_destination_input_sink'
      tags: [ qgis, processing ]

    - name: PROCESSING_DESTINATION_ROOT_PATH
      label: Specify destination root path
      description: |
        Specify the root directory for storing destination layers files when
        the `PROCESSING_RAW_DESTINATION_INPUT_SINK`_ option is enabled. 
        If not specified, file will be stored in the job folder.
      type: string
      default: ''
      section: processing
      key: 'destination_root_path'
      tags: [ qgis, processing ]

    - name: PROCESSING_ADJUST_ELLIPSOID
      label: Force ellipsoid imposed by the src project
      description: |
        Force the ellipsoid from the src project into the destination project. This only apply
        if the src project has a valid CRS.
      type: boolean
      default: no
      section: processing
      key: 'adjust_ellipsoid'
      tags: [ qgis, processing, crs ]

    - name: PROCESSING_DEFAULT_CRS
      label: Set default CRS
      description: |
        Set the CRS to use when no source map is specified.
        For more details on supported formats see the GDAL method ``GRSpatialReference::SetFromUserInput()``
      type: string
      default: 'EPSG:4326'
      section: processing
      key: 'default_crs'
      tags: [ qgis, processing, crs ]
